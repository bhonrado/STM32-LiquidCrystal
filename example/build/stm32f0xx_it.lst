ARM GAS  /tmp/cc2CxFYd.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32f0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	2
  19              		.global	NMI_Handler
  20              		.code	16
  21              		.thumb_func
  23              	NMI_Handler:
  24              		.fnstart
  25              	.LFB34:
  26              		.file 1 "Src/stm32f0xx_it.c"
   1:Src/stm32f0xx_it.c **** /**
   2:Src/stm32f0xx_it.c ****   ******************************************************************************
   3:Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   4:Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f0xx_it.c ****   ******************************************************************************
   6:Src/stm32f0xx_it.c ****   *
   7:Src/stm32f0xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   8:Src/stm32f0xx_it.c ****   *
   9:Src/stm32f0xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f0xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f0xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f0xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f0xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f0xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f0xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f0xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f0xx_it.c ****   *
  20:Src/stm32f0xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f0xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f0xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f0xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f0xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f0xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f0xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f0xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f0xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f0xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f0xx_it.c ****   *
  31:Src/stm32f0xx_it.c ****   ******************************************************************************
  32:Src/stm32f0xx_it.c ****   */
ARM GAS  /tmp/cc2CxFYd.s 			page 2


  33:Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f0xx_it.c **** #include "stm32f0xx_hal.h"
  35:Src/stm32f0xx_it.c **** #include "stm32f0xx.h"
  36:Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  37:Src/stm32f0xx_it.c **** 
  38:Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f0xx_it.c **** 
  40:Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32f0xx_it.c **** 
  42:Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32f0xx_it.c **** 
  44:Src/stm32f0xx_it.c **** /******************************************************************************/
  45:Src/stm32f0xx_it.c **** /*            Cortex-M0 Processor Interruption and Exception Handlers         */ 
  46:Src/stm32f0xx_it.c **** /******************************************************************************/
  47:Src/stm32f0xx_it.c **** 
  48:Src/stm32f0xx_it.c **** /**
  49:Src/stm32f0xx_it.c **** * @brief This function handles Non maskable interrupt.
  50:Src/stm32f0xx_it.c **** */
  51:Src/stm32f0xx_it.c **** void NMI_Handler(void)
  52:Src/stm32f0xx_it.c **** {
  27              		.loc 1 52 0
  28              		.cfi_startproc
  53:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  54:Src/stm32f0xx_it.c **** 
  55:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  56:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  57:Src/stm32f0xx_it.c **** 
  58:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  59:Src/stm32f0xx_it.c **** }
  29              		.loc 1 59 0
  30              		@ sp needed
  31 0000 7047     		bx	lr
  32              		.cfi_endproc
  33              	.LFE34:
  34              		.cantunwind
  35              		.fnend
  37 0002 C046     		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	2
  39              		.global	HardFault_Handler
  40              		.code	16
  41              		.thumb_func
  43              	HardFault_Handler:
  44              		.fnstart
  45              	.LFB35:
  60:Src/stm32f0xx_it.c **** 
  61:Src/stm32f0xx_it.c **** /**
  62:Src/stm32f0xx_it.c **** * @brief This function handles Hard fault interrupt.
  63:Src/stm32f0xx_it.c **** */
  64:Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  65:Src/stm32f0xx_it.c **** {
  46              		.loc 1 65 0
  47              		.cfi_startproc
  48              	.L3:
  64:Src/stm32f0xx_it.c **** {
  49              		.loc 1 64 0 discriminator 1
  50 0000 FEE7     		b	.L3
  51              		.cfi_endproc
ARM GAS  /tmp/cc2CxFYd.s 			page 3


  52              	.LFE35:
  53              		.cantunwind
  54              		.fnend
  56 0002 C046     		.section	.text.SVC_Handler,"ax",%progbits
  57              		.align	2
  58              		.global	SVC_Handler
  59              		.code	16
  60              		.thumb_func
  62              	SVC_Handler:
  63              		.fnstart
  64              	.LFB36:
  66:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  67:Src/stm32f0xx_it.c **** 
  68:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  69:Src/stm32f0xx_it.c ****   while (1)
  70:Src/stm32f0xx_it.c ****   {
  71:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  72:Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  73:Src/stm32f0xx_it.c ****   }
  74:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  75:Src/stm32f0xx_it.c **** 
  76:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  77:Src/stm32f0xx_it.c **** }
  78:Src/stm32f0xx_it.c **** 
  79:Src/stm32f0xx_it.c **** /**
  80:Src/stm32f0xx_it.c **** * @brief This function handles System service call via SWI instruction.
  81:Src/stm32f0xx_it.c **** */
  82:Src/stm32f0xx_it.c **** void SVC_Handler(void)
  83:Src/stm32f0xx_it.c **** {
  65              		.loc 1 83 0
  66              		.cfi_startproc
  84:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
  85:Src/stm32f0xx_it.c **** 
  86:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
  87:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
  88:Src/stm32f0xx_it.c **** 
  89:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
  90:Src/stm32f0xx_it.c **** }
  67              		.loc 1 90 0
  68              		@ sp needed
  69 0000 7047     		bx	lr
  70              		.cfi_endproc
  71              	.LFE36:
  72              		.cantunwind
  73              		.fnend
  75 0002 C046     		.section	.text.PendSV_Handler,"ax",%progbits
  76              		.align	2
  77              		.global	PendSV_Handler
  78              		.code	16
  79              		.thumb_func
  81              	PendSV_Handler:
  82              		.fnstart
  83              	.LFB37:
  91:Src/stm32f0xx_it.c **** 
  92:Src/stm32f0xx_it.c **** /**
  93:Src/stm32f0xx_it.c **** * @brief This function handles Pendable request for system service.
  94:Src/stm32f0xx_it.c **** */
ARM GAS  /tmp/cc2CxFYd.s 			page 4


  95:Src/stm32f0xx_it.c **** void PendSV_Handler(void)
  96:Src/stm32f0xx_it.c **** {
  84              		.loc 1 96 0
  85              		.cfi_startproc
  97:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
  98:Src/stm32f0xx_it.c **** 
  99:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 100:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 101:Src/stm32f0xx_it.c **** 
 102:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 103:Src/stm32f0xx_it.c **** }
  86              		.loc 1 103 0
  87              		@ sp needed
  88 0000 7047     		bx	lr
  89              		.cfi_endproc
  90              	.LFE37:
  91              		.cantunwind
  92              		.fnend
  94 0002 C046     		.section	.text.SysTick_Handler,"ax",%progbits
  95              		.align	2
  96              		.global	SysTick_Handler
  97              		.code	16
  98              		.thumb_func
 100              	SysTick_Handler:
 101              		.fnstart
 102              	.LFB38:
 104:Src/stm32f0xx_it.c **** 
 105:Src/stm32f0xx_it.c **** /**
 106:Src/stm32f0xx_it.c **** * @brief This function handles System tick timer.
 107:Src/stm32f0xx_it.c **** */
 108:Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 109:Src/stm32f0xx_it.c **** {
 103              		.loc 1 109 0
 104              		.cfi_startproc
 105 0000 08B5     		push	{r3, lr}
 106              		.save {r3, lr}
 107              	.LCFI0:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 3, -8
 110              		.cfi_offset 14, -4
 110:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 111:Src/stm32f0xx_it.c **** 
 112:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 113:Src/stm32f0xx_it.c ****   HAL_IncTick();
 111              		.loc 1 113 0
 112 0002 FFF7FEFF 		bl	HAL_IncTick
 113              	.LVL0:
 114:Src/stm32f0xx_it.c ****   HAL_SYSTICK_IRQHandler();
 114              		.loc 1 114 0
 115 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 116              	.LVL1:
 115:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 116:Src/stm32f0xx_it.c **** 
 117:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 118:Src/stm32f0xx_it.c **** }
 117              		.loc 1 118 0
 118              		@ sp needed
ARM GAS  /tmp/cc2CxFYd.s 			page 5


 119 000a 08BD     		pop	{r3, pc}
 120              		.cfi_endproc
 121              	.LFE38:
 122              		.fnend
 124              		.text
 125              	.Letext0:
 126              		.file 2 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 127              		.file 3 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/cc2CxFYd.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_it.c
     /tmp/cc2CxFYd.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc2CxFYd.s:23     .text.NMI_Handler:0000000000000000 NMI_Handler
      .ARM.exidx.text.NMI_Handler:0000000000000000 $d
     /tmp/cc2CxFYd.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc2CxFYd.s:43     .text.HardFault_Handler:0000000000000000 HardFault_Handler
.ARM.exidx.text.HardFault_Handler:0000000000000000 $d
     /tmp/cc2CxFYd.s:57     .text.SVC_Handler:0000000000000000 $t
     /tmp/cc2CxFYd.s:62     .text.SVC_Handler:0000000000000000 SVC_Handler
      .ARM.exidx.text.SVC_Handler:0000000000000000 $d
     /tmp/cc2CxFYd.s:76     .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc2CxFYd.s:81     .text.PendSV_Handler:0000000000000000 PendSV_Handler
   .ARM.exidx.text.PendSV_Handler:0000000000000000 $d
     /tmp/cc2CxFYd.s:95     .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc2CxFYd.s:100    .text.SysTick_Handler:0000000000000000 SysTick_Handler
  .ARM.extab.text.SysTick_Handler:0000000000000000 $d
  .ARM.exidx.text.SysTick_Handler:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
__aeabi_unwind_cpp_pr1
